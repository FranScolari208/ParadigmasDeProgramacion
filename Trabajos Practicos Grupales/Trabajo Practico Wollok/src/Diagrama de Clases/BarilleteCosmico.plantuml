@startuml "Barrilete Cosmico"

object barrileteCosmico{
    destinos = [lastToninas, garlicsSea, goodAirs, silversSea, miami, cancun, everest, aconcagua, buenosAires, cordobaCapital]
    usuarios = {pabloHari, santiago, franco}
    mediosDeTransporte = [avion,tren, barco, micro]

    obtenerDestinoMasImportantes()
    aplicarDescuentosALosDestinos()
    esEmpresaExtrema()
    cartaDeDestinos()
    armarViaje(unUsuario, unDestino)
    elegirTransporteEmpresarial(unosKilometros)
    elegirTransporteFamiliar()
    elegirTransporteEstudiantil(unUsuario, unosKilometros)
    transporteMasRapido(unosTransportes)
}

class Localidad {
    nombre
    equipajeImprecindible
    kilometroDeUbicacion
    precio
    esDestacado()
    esPeligroso()
    aplicarDescuento(unDescuento)
    reducirPrecio(unDescuento)
    agregarEquipaje(equipaje)  
    calcularDistancia(otraLocalidad)
}

class Playa extends Localidad{

}

class Montania extends Localidad{
    altura
}

class CiudadHistorica extends Localidad{
    cantidadDeMuseos

}

class Usuario{
    nombre
    localidadDeOrigen
    dinero
    viajes
    usuariosQueSigue
    tipoDeUsuario
    viajarA(destino)
    puedeViajar(destino)
    comprarPasaje(destino)
    agregarDestino(destino)
    kilometros()
    seguirUsuario(unUsuario)
    devolverFollow(unUsuario)
    hacerViaje(unViaje)
    elegirTransporte(unosKilometros)
    cambiarTipoDeUsuario(unTipoDeUsuario)
}

object empresarial{
    elegirTransportePorTipo(unUsuario, unosKilometros)
}

object familiar{
    elegirTransportePorTipo(unUsuario, unosKilometros)
}

object estudiantil{
    elegirTransportePorTipo(unUsuario, unosKilometros)
}

Interface TipoDeUsuario{
    elegirTransportePorTipo(unUsuario, unosKilometros)
}

class Viaje{
    origen
    destino
    medioDeTransporte
    distanciaRecorrida()
    precioDeViaje()
}

Abstract Transporte{
    tiempoDeViaje
    precioDeTransporte(unosKilometros)
    costoDeTransporte()
}

class Avion extends Transporte{
    impulsoDeTurbinas

}

class Micro extends Transporte{

}

class Barco extends Transporte{
    probabilidadDeChocar

}

class Tren extends Transporte{

}


object lastToninas{
    nombre = "Last Toninas"
    equipajeImprecindible =  ["vacuna gripal", "vacuna B", "necronomicon"]
    precio = 3500
    kilometroDeUbicacion = 50

}

object silverSea{
    nombre = "Silver's Sea"
	equipajeImprecindible = ["protector solar", "equipo de buceo"]
	precio = 1350
    kilometroDeUbicacion = 350
}

object goodAirs{
    nombre = "Good Airs"
	equipajeImprecindible = ["cerveza", "protector solar"]
	precio = 1500
    kilometroDeUbicacion = 200
}

object garlicSea {
    nombre = "Garlic's Sea"
	equipajeImprecindible = ["caÃ±a de pescar", "piloto"] 
	precio = 2500
    kilometroDeUbicacion = 100
}

object pHari{
    nombreUsuario = "Pablo Hari"
	destinosVisitados = [lastToninas, goodAirs]
	dinero = 1500
	seguidos = []
}

lastToninas --|> Localidad
goodAirs    --|> Localidad
silverSea   --|> Localidad
garlicSea   --|> Localidad
pHari   --|> Usuario

estudiantil ..> TipoDeUsuario
familiar ..> TipoDeUsuario
empresarial..> TipoDeUsuario

Usuario ..|> TipoDeUsuario

Viaje ..> Transporte 
Viaje ..> Localidad 
barrileteCosmico -->"*" Localidad
barrileteCosmico-->"*" Usuario
barrileteCosmico-->"*" Transporte
barrileteCosmico--> Viaje

@enduml
